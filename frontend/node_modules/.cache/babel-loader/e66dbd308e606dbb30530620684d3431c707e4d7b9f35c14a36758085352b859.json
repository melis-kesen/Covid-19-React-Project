{"ast":null,"code":"var _jsxFileName = \"/Users/meliskesen/Desktop/Projects/Covid-19 React Project/frontend/src/Map.js\";\nimport React from \"react\";\nimport { MapContainer, GeoJSON } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountryMap() {\n  const geojsonFeature = {\n    type: \"FeatureCollection\",\n    features: [{\n      type: \"Feature\",\n      properties: {\n        name: \"Country Name\"\n      },\n      geometry: {\n        type: \"Polygon\",\n        coordinates: [[[100, 0], [101, 0], [101, 1], [100, 1], [100, 0]]]\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [0, 0],\n    zoom: 2,\n    style: {\n      height: \"500px\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: geojsonFeature\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = CountryMap;\nexport default CountryMap;\nvar _c;\n$RefreshReg$(_c, \"CountryMap\");","map":{"version":3,"names":["React","MapContainer","GeoJSON","jsxDEV","_jsxDEV","CountryMap","geojsonFeature","type","features","properties","name","geometry","coordinates","center","zoom","style","height","width","children","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/meliskesen/Desktop/Projects/Covid-19 React Project/frontend/src/Map.js"],"sourcesContent":["import React from \"react\";\nimport { MapContainer, GeoJSON } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nfunction CountryMap() {\n  const geojsonFeature = {\n    type: \"FeatureCollection\",\n    features: [\n      {\n        type: \"Feature\",\n        properties: { name: \"Country Name\" },\n        geometry: {\n          type: \"Polygon\",\n          coordinates: [\n            [\n              [100, 0],\n              [101, 0],\n              [101, 1],\n              [100, 1],\n              [100, 0],\n            ],\n          ],\n        },\n      },\n    ],\n  };\n\n  return (\n    <MapContainer\n      center={[0, 0]}\n      zoom={2}\n      style={{ height: \"500px\", width: \"100%\" }}\n    >\n      <GeoJSON data={geojsonFeature} />\n    </MapContainer>\n  );\n}\n\nexport default CountryMap;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,OAAO,QAAQ,eAAe;AACrD,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,UAAUA,CAAA,EAAG;EACpB,MAAMC,cAAc,GAAG;IACrBC,IAAI,EAAE,mBAAmB;IACzBC,QAAQ,EAAE,CACR;MACED,IAAI,EAAE,SAAS;MACfE,UAAU,EAAE;QAAEC,IAAI,EAAE;MAAe,CAAC;MACpCC,QAAQ,EAAE;QACRJ,IAAI,EAAE,SAAS;QACfK,WAAW,EAAE,CACX,CACE,CAAC,GAAG,EAAE,CAAC,CAAC,EACR,CAAC,GAAG,EAAE,CAAC,CAAC,EACR,CAAC,GAAG,EAAE,CAAC,CAAC,EACR,CAAC,GAAG,EAAE,CAAC,CAAC,EACR,CAAC,GAAG,EAAE,CAAC,CAAC,CACT;MAEL;IACF,CAAC;EAEL,CAAC;EAED,oBACER,OAAA,CAACH,YAAY;IACXY,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE;IACfC,IAAI,EAAE,CAAE;IACRC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,eAE1Cd,OAAA,CAACF,OAAO;MAACiB,IAAI,EAAEb;IAAe;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEnB;AAACC,EAAA,GAhCQnB,UAAU;AAkCnB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}