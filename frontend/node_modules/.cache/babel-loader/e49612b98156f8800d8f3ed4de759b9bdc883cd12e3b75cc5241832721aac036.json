{"ast":null,"code":"var _jsxFileName = \"/Users/meliskesen/Desktop/Projects/Covid-19 React Project/frontend/src/Map.js\";\nimport React from 'react';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport { Link } from 'react-router-dom';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  const geojsonData = require('./countries.geo.json'); // Dünya haritasının GeoJSON verisi\n  const getRandomColor = () => {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n  const style = {\n    weight: 1,\n    opacity: 1,\n    color: 'black',\n    fillOpacity: 0.7,\n    fillColor: '#3388ff'\n  };\n  const onEachCountry = (country, layer) => {\n    layer.on('click', () => {\n      window.location.href = `/country/${country.properties.name}`; // Ülke adını içeren URL'ye yönlendir\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    style: {\n      height: '1000px',\n      width: '100%'\n    },\n    zoom: 2,\n    center: [0, 0],\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: geojsonData,\n      style: style,\n      onEachFeature: onEachCountry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","MapContainer","TileLayer","GeoJSON","Link","jsxDEV","_jsxDEV","Map","geojsonData","require","getRandomColor","letters","color","i","Math","floor","random","style","weight","opacity","fillOpacity","fillColor","onEachCountry","country","layer","on","window","location","href","properties","name","height","width","zoom","center","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","data","onEachFeature","_c","$RefreshReg$"],"sources":["/Users/meliskesen/Desktop/Projects/Covid-19 React Project/frontend/src/Map.js"],"sourcesContent":["import React from 'react';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport { Link } from 'react-router-dom';\nimport 'leaflet/dist/leaflet.css';\n\nfunction Map() {\n  const geojsonData = require('./countries.geo.json'); // Dünya haritasının GeoJSON verisi\n  const getRandomColor = () => {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n  const style = {\n    weight: 1,\n    opacity: 1,\n    color: 'black',\n    fillOpacity: 0.7,\n    fillColor: '#3388ff'\n  };\n\n  const onEachCountry = (country, layer) => {\n    layer.on('click', () => {\n      window.location.href = `/country/${country.properties.name}`; // Ülke adını içeren URL'ye yönlendir\n    });\n  };\n\n  return (\n    <MapContainer style={{ height: '1000px', width: '100%' }} zoom={2} center={[0, 0]}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      <GeoJSON data={geojsonData} style={style} onEachFeature={onEachCountry} />\n    </MapContainer>\n  );\n}\n\nexport default Map;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,OAAO,QAAQ,eAAe;AAChE,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,WAAW,GAAGC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC;EACrD,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,OAAO,GAAG,kBAAkB;IAClC,IAAIC,KAAK,GAAG,GAAG;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BD,KAAK,IAAID,OAAO,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IAClD;IACA,OAAOJ,KAAK;EACd,CAAC;EACD,MAAMK,KAAK,GAAG;IACZC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE,CAAC;IACVP,KAAK,EAAE,OAAO;IACdQ,WAAW,EAAE,GAAG;IAChBC,SAAS,EAAE;EACb,CAAC;EAED,MAAMC,aAAa,GAAGA,CAACC,OAAO,EAAEC,KAAK,KAAK;IACxCA,KAAK,CAACC,EAAE,CAAC,OAAO,EAAE,MAAM;MACtBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAI,YAAWL,OAAO,CAACM,UAAU,CAACC,IAAK,EAAC,CAAC,CAAC;IAChE,CAAC,CAAC;EACJ,CAAC;EAED,oBACExB,OAAA,CAACL,YAAY;IAACgB,KAAK,EAAE;MAAEc,MAAM,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAO,CAAE;IAACC,IAAI,EAAE,CAAE;IAACC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE;IAAAC,QAAA,gBAChF7B,OAAA,CAACJ,SAAS;MACRkC,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAAyF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG,CAAC,eACFnC,OAAA,CAACH,OAAO;MAACuC,IAAI,EAAElC,WAAY;MAACS,KAAK,EAAEA,KAAM;MAAC0B,aAAa,EAAErB;IAAc;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEnB;AAACG,EAAA,GAjCQrC,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}